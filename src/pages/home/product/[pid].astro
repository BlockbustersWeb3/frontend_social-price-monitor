---
import Layout from '../../../layouts/Layout.astro';
import data from '../../../../public/data.json';
import '../../../../assets/scss/astro-ecommerce.scss';
import Navbar from '../../../components/navbar';
import UpperNavbar from '../../../components/store/upperNavbar';
import CardProduct from '../../../components/products/cardProduct';
import ProductOverviewGrid from '../../../components/products/productOverviewGrid';
import ProductOverview from '../../../components/products/ProductOverview';
import StoreDoubleColumn from '../../../components/store/storeDoubleColumn';
import ReviewSummaryChart from '../../../components/reviews/reviewSummaryChart';
import MainContainer from '../../../components/authentication/MainContainer';
import NavbarDashboard from '../../../components/navbar_dashboard';
import { JsonRpcProvider, ethers } from 'ethers';
import contractABI from '../../../components/store/abi.json'
import { collection, query, doc, getDoc, where } from "firebase/firestore";
import { db } from '../../../components/store/firebase';

export const SMART_CONTACT_IP = "http://127.0.0.1:8545/"
export const PRICE_MONITOR_ADDRESS = "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9"

export const TITLE = 0
export const BRAND = 1
export const DESCRIPTION = 2

export async function getAllProducts() {
  console.log("Getting products in pid astro")
    // if(typeof window.ethereum != 'undefined'){

      //By using the provider object weâ€™re ready to retrieve a reference to the SC
      //on the blockchain by creating a new ethers.Contract object.
      // const provider = new BrowserProvider(window.ethereum)
      const provider = new JsonRpcProvider(SMART_CONTACT_IP);
      const contract = new ethers.Contract(PRICE_MONITOR_ADDRESS, contractABI, provider)

      try{
        const data = await contract.getAllProducts()
        const productsFromContract = data.filter(item => {
          if(item[TITLE] != '' || item[BRAND] != '' || item[DESCRIPTION] != ''){
            return item
          }
        })
        // console.log("Products from contract", productsFromContract)
        return productsFromContract
      }catch(err){
        console.log("Error: ", err)
      }
    // }
}

export async function getStaticPaths() {

  let products = await getAllProducts()

  let result = products.map((item: Object, i: Number) => {
    return {
      params: {pid: i},
      props: {product: item, id: i},
    };
  });
  console.log("products", result)
  return result
}

// filter reviews with ID 01
// let productReviews = data.reviews.filter(x => x.productID == "01");
const { product, id } = Astro.props;
---

<Layout title="Product Page">
    <MainContainer client:load>
      <NavbarDashboard client:load></NavbarDashboard>
      <div class="container mt-5">
        <!-- <ProductOverviewrid  /> -->
        <ProductOverview id={id} product={product} client:load/>
        <!-- colors={product[0].colors}
          images={product[0].images}
          title={product[0].title}
          full_description={product[0].full_description}
          price={product[0].price}
          highlights={product[0].highlights}
          details={product[0].details}
          rating={product[0].rating}
          reviews={product[0].reviews}
          sizes={product[0].sizes} -->

        <!-- <div class="my-5">
          <ReviewSummaryChart reviews = {productReviews}/>
        </div>

        <div class="row">
          <h5 class="mb-4">Customers also purchased</h5>
          {data.products.map(product => 
            <div class="col-md-6 col-lg-3">
              <CardProduct 
                thumb_src = {product.thumb_src}
                thumb_alt = {product.thumb_alt}
                color = {product.color}
                title = {product.title}
                price = {product.price}
                position = "left"
              />
            </div>
          )}        
        </div> -->
        <hr class="dark horizontal my-5" />
        <StoreDoubleColumn />
      </div>
    </MainContainer>
</Layout>